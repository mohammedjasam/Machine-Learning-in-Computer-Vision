function [min_distance, index] = calc_distance(sim_measure, K, num_train_images, num_test_images, train_alpha, test_alpha) 
    
    if strcmpi(sim_measure, 'euclidean') == 1
        a = train_alpha;
        b = test_alpha;
        aa=sum(a.*a,1); bb=sum(b.*b,1); ab=a'*b; 
        distance_matrix = sqrt(abs(repmat(aa',[1 size(bb,2)]) + repmat(bb,[size(aa,2) 1]) - 2*ab));
        [min_distance, index] = min(distance_matrix);
    end
    
    if strcmpi(sim_measure, 'manhattan') == 1
        a = train_alpha;
        b = test_alpha;
        for i = 1:173
            for j = 1:186
                distance_matrix(i,j) = sum(abs(a(:,i) - b(:,j)));
            end
        end
        [min_distance, index] = min(distance_matrix);
        
    end
    
    if strcmpi(sim_measure, 'city') == 1
        [R, N] = size(alpha);
        [R, P] = size(alpha_testing);

        C = [alpha, alpha_testing];
        invcov = inv(cov(C'));

        for i=1:N
            diff = repmat(alpha(:,i), 1, P) - alpha_testing;
            dsq(i,:) = sum((invcov*diff).*diff , 1);
        end

        d = sqrt(dsq);
    end
    
    